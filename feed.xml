<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xuantain&#39;s blog</title>
    <description>A simple, beautiful theme for Jekyll that emphasizes content rather than aesthetic fluff.</description>
    <link>http://xuantain.github.io/</link>
    <atom:link href="http://xuantain.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Tìm hiểu về AngularJS Directives</title>
        <description>&lt;h3 id=&quot;directives-l-g&quot;&gt;Directives là gì?&lt;/h3&gt;

&lt;p&gt;Các thuộc tính, id, class, name, onClick, … của một DOM element được gọi chung là directives. AngularJS sẽ dựa vào những directive đó để đính kèm các chỉ thị hoặc các sự kiện tới DOM element cần xử lý, thậm chí là thay đổi cấu trúc của DOM. &lt;/p&gt;

&lt;p&gt;AngularJS có sẵn một bộ directives: ng-app, ng-module, ng-controller, …  Để phát triển ứng dụng với AngularJS thì cần phải nắm rõ cách hoạt động và mục đích sử dụng của những directive đó. Trong phạm vi bài viết này sẽ không giải thích và hướng dẫn cách sử dụng những directive sẵn có của AngularJS.&lt;/p&gt;

&lt;h3 id=&quot;cch-directives-c-bin-dch&quot;&gt;Cách directives được biên dịch&lt;/h3&gt;
&lt;p&gt;Khi một trang được load thì web brower sẽ tự động parses HTML vào DOM.
Việc biên dịch HTML được thực thi trong 3 bước:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;$compile sẽ quét qua các DOM elements, nếu compiler tìm thấy element nào có khai báo directive, thì directive tương ứng sẽ được thêm vào danh sách các directives phù hợp với DOM element. Một element có thể khai báo nhiều directives.&lt;/li&gt;
  &lt;li&gt;Khi một DOM element khai báo nhiều directives, compiler sẽ sắp xếp thứ tự biên dịch các directives theo thuộc tính priority của mỗi directive. Compiler functions của mỗi directive sẽ được thực thi. Mỗi compiler function có thể làm thay đổi DOM. Mỗi compiler function phải trả về một link function, xử lý liên kết giữa DOM và scope.&lt;/li&gt;
  &lt;li&gt;$compile liên kết template với scope bằng cách gọi linking function đã liên kết từ bước 2. Đăng ký theo dõi các elements và thiết lập cơ chế $watchs với scope của directive được cấu hình.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sau khi thực thi biên dịch HTML thì giữa scope và DOM sẽ có sự ràng buộc (a live binding), một thay đổi ở model trên compiled scope sẽ được ánh xạ vào DOM.&lt;/p&gt;

&lt;h3 id=&quot;directives-scope&quot;&gt;Directive’s scope&lt;/h3&gt;
&lt;p&gt;Mặc định thì dỉective sẽ lấy scope cha bên ngoài, nhưng trong một số truờng hợp chúng ta muốn directive khai báo thêm các thuộc tính và function khác chỉ sử dụng bên trong nội bộ directive, mà lại không làm ảnh huởng đến scope cha bên ngoài thì có 2 lựa chọn:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A child scope: scope này thừa kế từ scope cha bên ngoài, và có thể được khai báo thêm các property, function khác.&lt;/li&gt;
  &lt;li&gt;An isolated scope: là một scope riêng mới, không thừa kế gì từ scope bên ngoài, chỉ tồn tại mỗi mình nó.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sử dụng isolate scope cho truờng hợp khi chúng ta tạo một custom directive, và muốn tái sử dụng directive đó.&lt;/p&gt;

&lt;p&gt;Sử dụng isolate scope không có nghĩa là không truy cập đuợc vào scope cha bên ngoài.&lt;/p&gt;

&lt;h3 id=&quot;to-custom-directive&quot;&gt;Tạo custom directive&lt;/h3&gt;
&lt;p&gt;Tên của Angular Directives được khai báo theo kiểu &lt;a href=&quot;http://en.wikipedia.org/wiki/CamelCase&quot;&gt;camelCase&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myDemoModule&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myDemoDirective&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TODO&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- &lt;iframe src=&quot;http://embed.plnkr.co/0TCzKZfaq17oQCRkgV0K/preview&quot; style=&quot;border:1px #FFFFFF none;&quot; name=&quot;myiFrame&quot; scrolling=&quot;no&quot; frameborder=&quot;1&quot; marginheight=&quot;0px&quot; marginwidth=&quot;0px&quot; height=&quot;250px&quot; width=&quot;100%px&quot;&gt;&lt;/iframe&gt;
 --&gt;

&lt;h4 id=&quot;mt-mu-nh-ngha-directive&quot;&gt;Một mẫu định nghĩa directive&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myDemoModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myDemoModule&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;myDemoModule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myDemoDirective&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;injectables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;restrict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;AECM”, // kiểu string&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    priority: 3, // kiểu number,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    template: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&amp;quot;, /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ki&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ể&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;myDirectivesFolder / demoTempDirective.html”, //kiểu string&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    replace: true, // kiểu boolean&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    transclude: false, // kiểu boolean&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    scope: {&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;      title: &amp;#39;@&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    }, // kiểu bool hoặc object&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    controller: function controllerConstructor($scope, $element, $attrs, $transclude) {…},&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    require: [&amp;#39;^myTabs&amp;#39;, &amp;#39;^myModel&amp;#39;], // kiểu string&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    link: function postLink(scope, iElement, iAttrs) {…},&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    compile: function compile(tElement, tAttrs, transclude) {&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;      return {&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;        pre: function preLink(scope, iElement, iAttrs, controller) {…},&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;        post: function postLink(scope, iElement, iAttrs, controller) {…}&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;      }&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  };&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;cc-thuc-tnh-khai-bo&quot;&gt;Các thuộc tính khai báo&lt;/h4&gt;

&lt;h5 id=&quot;emrestrictem&quot;&gt;&lt;em&gt;restrict&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;khai báo kiểu directive. Có các giá trị (A, E, C, M) tương ứng 4 kiểu directive.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Kiểu &lt;span class=&quot;green&quot;&gt;a&lt;/span&gt;ttribute (A)&lt;br /&gt;
&lt;span class=&quot;blue&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;red&quot;&gt;my-directive&lt;/span&gt;&lt;span class=&quot;blue&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Kiểu &lt;span class=&quot;green&quot;&gt;e&lt;/span&gt;lement (E)&lt;br /&gt;
&lt;span class=&quot;blue&quot;&gt;&amp;lt;my-directive&amp;gt;&amp;lt;/my-directive&amp;gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Kiểu &lt;span class=&quot;green&quot;&gt;c&lt;/span&gt;lass (C)&lt;br /&gt;
&lt;span class=&quot;blue&quot;&gt;&amp;lt;div&lt;/span&gt; class=&lt;span class=&quot;red&quot;&gt;”my-directive”&lt;/span&gt;&lt;span class=&quot;blue&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Kiểu co&lt;span class=&quot;green&quot;&gt;m&lt;/span&gt;ment (M)&lt;br /&gt;
&lt;code&gt;&amp;lt;!-- directive: my-directive --&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;ins&gt;VD:&lt;/ins&gt;&lt;br /&gt;
index.html&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;myDemoModule&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;demoController&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  
	        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ANY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  	    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/my-demo-directive&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;	    &amp;lt;ANY class=&amp;quot;my-demo-directive&amp;quot;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ANY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;script.js&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myDemoModule&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myDemoDirective&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    	   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;restrict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;p&amp;gt;This is my Angular directive demo&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;empriorityem&quot;&gt;&lt;em&gt;priority&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;Thứ tự thực thi directive.&lt;/p&gt;

&lt;p&gt;Khi một DOM element khai báo nhiều directive thì cần phân định rõ thứ tự thực thi directive, vì vậy priority được dùng để sắp xếp các directive trước khi compile function  được gọi. Priority được khai báo kiểu number, theo thứ tự thực thi 0 → 1 → 2 → … → n (Giá trị mặc định của priority là “0”). &lt;/p&gt;

&lt;p&gt;Trường hợp các directive có giá trị priority bị trùng nhau thì trình biên dịch sẽ thực thi directive được khai báo trước.&lt;/p&gt;

&lt;p&gt;Các “pre-link” function cũng được thực thi theo thứ tự của priority, còn “post-link” thì được thực thi theo thứ tự ngược lại. &lt;/p&gt;

&lt;p&gt;&lt;ins&gt;VD:&lt;/ins&gt;&lt;br /&gt;
Các directive02, directive01, directive03 đều khai báo “priority: 1”&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“&amp;lt;p  directive02 directive01 directive03 &amp;gt;&amp;lt;/p&amp;gt;” : Thứ tự thực thi sẽ là: directive02 →  directive01 →  directive03.&lt;/li&gt;
  &lt;li&gt;
    &lt;p directive03=&quot;&quot; directive01=&quot;&quot; directive02=&quot;&quot;&gt;&lt;/p&gt;
    &lt;p&gt;: Thứ tự thực thi sẽ là: directive03 →  directive01 →  directive02.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nếu các directive đó đều có tác động đến việc hiển thị của DOM element, thì trình biên dịch sẽ ưu tiên xử lý của directive có giá trị priority nhỏ nhất.&lt;/p&gt;

&lt;h5 id=&quot;emtemplateem&quot;&gt;&lt;em&gt;template&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emtemplateurlem&quot;&gt;&lt;em&gt;templateUrl&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emreplaceem&quot;&gt;&lt;em&gt;replace&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emtranscludeem&quot;&gt;&lt;em&gt;transclude&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emscopeem&quot;&gt;&lt;em&gt;scope&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emcontrollerem&quot;&gt;&lt;em&gt;controller&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emrequireem&quot;&gt;&lt;em&gt;require&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emlinkem&quot;&gt;&lt;em&gt;link&lt;/em&gt;&lt;/h5&gt;

&lt;h5 id=&quot;emcompileem&quot;&gt;&lt;em&gt;compile&lt;/em&gt;&lt;/h5&gt;

&lt;p&gt;&lt;del&gt;
Để dễ hiểu về AngularJS Directive, hãy xem qua tình huống sau:
Giả sử trong tình huống bạn muốn hiển thị nhiều vùng dữ liệu có cùng format về giao diện, nhưng khác nhau về nội dung dữ liệu thì có nhiều cách để thực hiện.&lt;/del&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;Cách 1: Bạn có thể viết code ở những vị trí cần hiển thị. Cách này chắc chắn code sẽ rất thừa thải và không có khả năng tái sử dụng, rất khó khăn khi bạn muốn thay đổi format giao diện cho phần hiển thị đó vì phải tìm đến từng nơi.&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Cách 2: Bạn có thể tạo một template chung và sử dụng javascript hay jQuery để đưa dữ liệu vào template mỗi khi gọi, nhưng cách này tương đối phức tạp, và xử lý tình huống này code sẽ không ít.&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Cách 3: Bạn có thể sử dụng AngularJS và tạo một directive cho phần hiển thị đó. Cách này rất gọn gàng và tường minh, có thể tái sử dụng ở nhiều nơi, việc chỉnh sửa cũng dễ dàng hơn.&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;del&gt;Tình huống trên đưa ra chỉ để dễ hình dung về directive, nhưng chưa nói lên đầy đủ ý nghĩa của directive. Bài viết này sẽ đưa ra những demo và giải thích để bạn hiểu rõ hơn.
&lt;/del&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Oct 2014 00:00:00 +0700</pubDate>
        <link>http://xuantain.github.io/javascript/angularjs/tim-hieu-ve-angularjs-directives.html</link>
        <guid isPermaLink="true">http://xuantain.github.io/javascript/angularjs/tim-hieu-ve-angularjs-directives.html</guid>
      </item>
    
  </channel>
</rss>
